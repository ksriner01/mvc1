<!--kriner-mvc6-->
<!--Changed the model class to InstructorIndexData.-->
@model ContosoUniversity.Models.SchoolViewModels.InstructorIndexData

<!--kriner-mvc6-->
<!--Changed the View title from Index to Instructors.-->
@{
    ViewData["Title"] = "Instructors";
}

<h2>Instructors</h2>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>Last Name</th>
            <th>First Name</th>
            <th>Hire Date</th>
            <th>Office</th>
            <th>Courses</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Instructors)
        {
            string selectedRow = "";
            if (item.ID == (int?)ViewData["InstructorID"])
            {
                selectedRow = "table-success";
            }
            <tr class="@selectedRow">
                <td>
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstMidName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.HireDate)
                </td>
                <!--kriner-mvc6-->
                <!--Displays the Instructor's office location if it is not null in the table.-->
                <td>
                    @if (item.OfficeAssignment != null)
                    {
                        @item.OfficeAssignment.Location
                    }
                </td>
                <!--kriner-mvc6-->
                <!--Adds a course column that shows all the Courses that the Instructor teaches.-->
                <td>
                    @foreach (var course in item.CourseAssignments)
                    {
                        @course.Course.CourseID @course.Course.Title <br />
                    }
                </td>
                <!--kriner-mvc6-->
                <!--Added a hyplink for selecting an instructor.-->
                <td>
                    <a asp-action="Index" asp-route-id="@item.ID">Select</a> |
                    <a asp-action="Edit" asp-route-id="@item.ID">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.ID">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.ID">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
<!--kriner-mvc6-->
<!--Reads and displays the courses taught by an Instructor that is selected in the Webapp. For each
    course that the Instructor teaches, displays the CourseID, Title of the course, and Department name.
-->
@if (Model.Courses != null)
{
        <h3>Courses Taught by Selected Instructor</h3>
        <table class="table">
            <tr>
                <th></th>
                <th>Number</th>
                <th>Title</th>
                <th>Department</th>
            </tr>

        @foreach (var item in Model.Courses)
        {
            string selectedRow = "";
            if (item.CourseID == (int?)ViewData["CourseID"])
            {
                selectedRow = "success";
            }
                    <tr class="@selectedRow">
                        <td>
                    @Html.ActionLink("Select", "Index", new { courseID = item.CourseID })
                        </td>
                        <td>
                    @item.CourseID
                        </td>
                        <td>
                    @item.Title
                        </td>
                        <td>
                    @item.Department.Name
                        </td>
                    </tr>
        }

        </table>
    <!--kriner-mvc6-->
    <!--Whenever a course is selected the students enrolled in it are displayed.-->
    @if (Model.Enrollments != null)
    {
            <h3>
                Students Enrolled in Selected Course
            </h3>
            <table class="table">
                <tr>
                    <th>Name</th>
                    <th>Grade</th>
                </tr>
            @foreach (var item in Model.Enrollments)
            {
                        <tr>
                            <td>
                        @item.Student.FullName
                            </td>
                            <td>
                        @Html.DisplayFor(modelItem => item.Grade)
                            </td>
                        </tr>
            }
            </table>
    }
}
